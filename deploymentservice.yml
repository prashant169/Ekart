# ----------------- DEPLOYMENT -----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ekart-deployment
  labels:                        # ✅ Added labels to metadata for better K8s identification
    app: ekart
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ekart
  template:
    metadata:
      labels:
        app: ekart
    spec:
      containers:
        - name: ekart
          image: prashantphad45/ekart:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8070

          # ✅ Added livenessProbe to check if app is still running
          #    If this fails, the container is restarted
          livenessProbe:
            httpGet:
              path: /actuator/health   # Change this if your app uses a different health endpoint
              port: 8070
            initialDelaySeconds: 30    # Wait 30s before starting liveness checks
            periodSeconds: 10          # Check every 10s

          # ✅ Added readinessProbe to check if app is ready to receive traffic
          #    If this fails, the pod won't receive traffic
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8070
            initialDelaySeconds: 15    # Wait 15s before checking if the app is ready
            periodSeconds: 5           # Check every 5s

---

# ----------------- SERVICE -----------------------
apiVersion: v1
kind: Service
metadata:
  name: ekart-ssvc
  labels:                        # ✅ Added metadata labels for clarity and selection
    app: ekart
spec:
  selector:
    app: ekart
  ports:
    - protocol: TCP
      port: 8070
      targetPort: 8070
  type: LoadBalancer             # ✅ Correct — exposes your service externally (on cloud or with Minikube tunnel)
